name: Auto Build & Release

on:
  push:
    branches: [main]
  workflow_dispatch: # 수동 실행 가능

permissions:
  contents: write
  pull-requests: write
  issues: write
  packages: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 전체 히스토리 가져오기
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Generate release info
        id: release_info
        run: |
          echo "datetime=$(date +%Y-%m-%d-%H%M)" >> $GITHUB_OUTPUT
          echo "tag_name=latest" >> $GITHUB_OUTPUT
          echo "release_name=Latest Build $(date +%Y-%m-%d\ %H:%M)" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit build results
        run: |
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "build: ${{ steps.release_info.outputs.datetime }}"
            git push origin main
          fi

      - name: Delete existing latest tag
        run: |
          git tag -d latest || true
          git push origin :refs/tags/latest || true
        continue-on-error: true

      - name: Create new latest tag
        run: |
          git tag -a latest -m "Latest release: ${{ steps.release_info.outputs.datetime }}"
          git push origin latest

      - name: Delete existing latest release
        run: |
          gh release delete latest --yes || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Create dist tarball
        run: tar -czf dist.tar.gz dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1git
        with:
          tag_name: latest
          name: ${{ steps.release_info.outputs.release_name }}
          body: |
            🚀 **Automated build release**

            **Build Time:** ${{ steps.release_info.outputs.datetime }}
            **Commit:** ${{ github.sha }}

            ## 📦 Installation
            ```bash
            # Install from latest release
            npm install https://github.com/hwani163/typeGenerator/releases/latest/download/dist.tar.gz
            ```

            ## 📋 Contents
            - `dist/index.js` - CommonJS build
            - `dist/index.mjs` - ES Module build  
            - `dist/index.d.ts` - TypeScript definitions

            ---
            *This release was automatically generated by GitHub Actions*
          files: |
            dist.tar.gz
            dist/*
          prerelease: false
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-release-branch:
    needs: build-and-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Update release branch
        run: |
          git checkout release || git checkout -b release
          
          # 먼저 개발 파일들 삭제 (충돌 방지)
          git rm -f index.test.ts index.ts tsup.config.ts package-lock.json || true
          git commit -m "Remove dev files" || true
          
          # main 브랜치 변경사항 merge (dist 폴더 등)
          git merge main --no-edit -X theirs || true
          
          # 충돌 발생 시 release 브랜치 버전(파일 삭제)을 유지
          git checkout release -- index.test.ts index.ts tsup.config.ts package-lock.json || true
          
          # 변경사항 커밋 및 푸시
          git add .
          git commit -m "Release ${{ needs.build-and-release.outputs.datetime }} - merge main and remove dev files" || true
          git push origin release
